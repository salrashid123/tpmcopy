// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: duplicatepb/wrap.proto

package tpmwrappb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Secret_KeyType int32

const (
	Secret_ECC  Secret_KeyType = 0
	Secret_RSA  Secret_KeyType = 1
	Secret_HMAC Secret_KeyType = 2
	Secret_AES  Secret_KeyType = 3
)

// Enum value maps for Secret_KeyType.
var (
	Secret_KeyType_name = map[int32]string{
		0: "ECC",
		1: "RSA",
		2: "HMAC",
		3: "AES",
	}
	Secret_KeyType_value = map[string]int32{
		"ECC":  0,
		"RSA":  1,
		"HMAC": 2,
		"AES":  3,
	}
)

func (x Secret_KeyType) Enum() *Secret_KeyType {
	p := new(Secret_KeyType)
	*p = x
	return p
}

func (x Secret_KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secret_KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_duplicatepb_wrap_proto_enumTypes[0].Descriptor()
}

func (Secret_KeyType) Type() protoreflect.EnumType {
	return &file_duplicatepb_wrap_proto_enumTypes[0]
}

func (x Secret_KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secret_KeyType.Descriptor instead.
func (Secret_KeyType) EnumDescriptor() ([]byte, []int) {
	return file_duplicatepb_wrap_proto_rawDescGZIP(), []int{0, 0}
}

type Secret_ParentKeyType int32

const (
	Secret_EKECC Secret_ParentKeyType = 0
	Secret_EKRSA Secret_ParentKeyType = 1
)

// Enum value maps for Secret_ParentKeyType.
var (
	Secret_ParentKeyType_name = map[int32]string{
		0: "EKECC",
		1: "EKRSA",
	}
	Secret_ParentKeyType_value = map[string]int32{
		"EKECC": 0,
		"EKRSA": 1,
	}
)

func (x Secret_ParentKeyType) Enum() *Secret_ParentKeyType {
	p := new(Secret_ParentKeyType)
	*p = x
	return p
}

func (x Secret_ParentKeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secret_ParentKeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_duplicatepb_wrap_proto_enumTypes[1].Descriptor()
}

func (Secret_ParentKeyType) Type() protoreflect.EnumType {
	return &file_duplicatepb_wrap_proto_enumTypes[1]
}

func (x Secret_ParentKeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secret_ParentKeyType.Descriptor instead.
func (Secret_ParentKeyType) EnumDescriptor() ([]byte, []int) {
	return file_duplicatepb_wrap_proto_rawDescGZIP(), []int{0, 1}
}

type Secret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       int32                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Type          Secret_KeyType         `protobuf:"varint,3,opt,name=type,proto3,enum=duplicatepb.Secret_KeyType" json:"type,omitempty"`
	ParentKeyType Secret_ParentKeyType   `protobuf:"varint,4,opt,name=parentKeyType,proto3,enum=duplicatepb.Secret_ParentKeyType" json:"parentKeyType,omitempty"`
	Pcrs          []*PCRS                `protobuf:"bytes,5,rep,name=pcrs,proto3" json:"pcrs,omitempty"`
	Key           string                 `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	AuthValue     [][]byte               `protobuf:"bytes,7,rep,name=authValue,proto3" json:"authValue,omitempty"`
	ParentName    string                 `protobuf:"bytes,8,opt,name=parentName,proto3" json:"parentName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_duplicatepb_wrap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_duplicatepb_wrap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_duplicatepb_wrap_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Secret) GetType() Secret_KeyType {
	if x != nil {
		return x.Type
	}
	return Secret_ECC
}

func (x *Secret) GetParentKeyType() Secret_ParentKeyType {
	if x != nil {
		return x.ParentKeyType
	}
	return Secret_EKECC
}

func (x *Secret) GetPcrs() []*PCRS {
	if x != nil {
		return x.Pcrs
	}
	return nil
}

func (x *Secret) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Secret) GetAuthValue() [][]byte {
	if x != nil {
		return x.AuthValue
	}
	return nil
}

func (x *Secret) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

type PCRS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pcr           int32                  `protobuf:"varint,1,opt,name=pcr,proto3" json:"pcr,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PCRS) Reset() {
	*x = PCRS{}
	mi := &file_duplicatepb_wrap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PCRS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCRS) ProtoMessage() {}

func (x *PCRS) ProtoReflect() protoreflect.Message {
	mi := &file_duplicatepb_wrap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCRS.ProtoReflect.Descriptor instead.
func (*PCRS) Descriptor() ([]byte, []int) {
	return file_duplicatepb_wrap_proto_rawDescGZIP(), []int{1}
}

func (x *PCRS) GetPcr() int32 {
	if x != nil {
		return x.Pcr
	}
	return 0
}

func (x *PCRS) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_duplicatepb_wrap_proto protoreflect.FileDescriptor

const file_duplicatepb_wrap_proto_rawDesc = "" +
	"\n" +
	"\x16duplicatepb/wrap.proto\x12\vduplicatepb\"\xfe\x02\n" +
	"\x06Secret\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x12/\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1b.duplicatepb.Secret.KeyTypeR\x04type\x12G\n" +
	"\rparentKeyType\x18\x04 \x01(\x0e2!.duplicatepb.Secret.ParentKeyTypeR\rparentKeyType\x12%\n" +
	"\x04pcrs\x18\x05 \x03(\v2\x11.duplicatepb.PCRSR\x04pcrs\x12\x10\n" +
	"\x03key\x18\x06 \x01(\tR\x03key\x12\x1c\n" +
	"\tauthValue\x18\a \x03(\fR\tauthValue\x12\x1e\n" +
	"\n" +
	"parentName\x18\b \x01(\tR\n" +
	"parentName\".\n" +
	"\aKeyType\x12\a\n" +
	"\x03ECC\x10\x00\x12\a\n" +
	"\x03RSA\x10\x01\x12\b\n" +
	"\x04HMAC\x10\x02\x12\a\n" +
	"\x03AES\x10\x03\"%\n" +
	"\rParentKeyType\x12\t\n" +
	"\x05EKECC\x10\x00\x12\t\n" +
	"\x05EKRSA\x10\x01\".\n" +
	"\x04PCRS\x12\x10\n" +
	"\x03pcr\x18\x01 \x01(\x05R\x03pcr\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05valueB3Z1github.com/salrashid123/go-tpm-wrapping/tpmwrappbb\x06proto3"

var (
	file_duplicatepb_wrap_proto_rawDescOnce sync.Once
	file_duplicatepb_wrap_proto_rawDescData []byte
)

func file_duplicatepb_wrap_proto_rawDescGZIP() []byte {
	file_duplicatepb_wrap_proto_rawDescOnce.Do(func() {
		file_duplicatepb_wrap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_duplicatepb_wrap_proto_rawDesc), len(file_duplicatepb_wrap_proto_rawDesc)))
	})
	return file_duplicatepb_wrap_proto_rawDescData
}

var file_duplicatepb_wrap_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_duplicatepb_wrap_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_duplicatepb_wrap_proto_goTypes = []any{
	(Secret_KeyType)(0),       // 0: duplicatepb.Secret.KeyType
	(Secret_ParentKeyType)(0), // 1: duplicatepb.Secret.ParentKeyType
	(*Secret)(nil),            // 2: duplicatepb.Secret
	(*PCRS)(nil),              // 3: duplicatepb.PCRS
}
var file_duplicatepb_wrap_proto_depIdxs = []int32{
	0, // 0: duplicatepb.Secret.type:type_name -> duplicatepb.Secret.KeyType
	1, // 1: duplicatepb.Secret.parentKeyType:type_name -> duplicatepb.Secret.ParentKeyType
	3, // 2: duplicatepb.Secret.pcrs:type_name -> duplicatepb.PCRS
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_duplicatepb_wrap_proto_init() }
func file_duplicatepb_wrap_proto_init() {
	if File_duplicatepb_wrap_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_duplicatepb_wrap_proto_rawDesc), len(file_duplicatepb_wrap_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_duplicatepb_wrap_proto_goTypes,
		DependencyIndexes: file_duplicatepb_wrap_proto_depIdxs,
		EnumInfos:         file_duplicatepb_wrap_proto_enumTypes,
		MessageInfos:      file_duplicatepb_wrap_proto_msgTypes,
	}.Build()
	File_duplicatepb_wrap_proto = out.File
	file_duplicatepb_wrap_proto_goTypes = nil
	file_duplicatepb_wrap_proto_depIdxs = nil
}
